@using QualLMS.Domain.APIModels
@using QualLMS.Domain.Models
@using QualvationLibrary

@model AddStudentCourseData
@inject CustomLogger logger
@inject Client client

@{

    string OrganizationId = logger.OrganizationId.ToString();

    var IsError = logger.IsError;
    var IsSuccess = logger.IsSuccess;
    var ErrorMessage = logger.ErrorMessage;
    var SuccessMessage = logger.SuccessMessage;

    var StudentId = Model.Data.StudentId;

    var CourseSelect = new SelectList(Model.Courses, "Id", "CourseName");
    var UserSelect = new SelectList(Model.Users, "Id", "FullName");
}

<h2 class="main-title-w3layouts mb-2 text-center">Add Student Course</h2>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/home">Home</a></li>
        <li class="breadcrumb-item"><a href="/StudentCourse">StudentCourses</a></li>
        <li class="breadcrumb-item active">Add/Edit</li>
    </ol>
</nav>

<section class="forms-section">
    <div class="container-fluid">
        <div class="row">
            <div class="outer-w3-agile col-xl mt-3">
                <form method="post">
                    <div>
                        <div class="form-row">
                            <div class="col-md-6">
                                <input type="hidden" id="Id" name="Id" value="@Model.Data.Id" />
                                <label for="UserId">User</label>
                                @Html.DropDownListFor(m => m.Data.StudentId, UserSelect, "-- Please Select --", new { @class = "form-control" })
                            </div>
                            <div class="col-md-6">
                                <label for="CourseId">Course</label>
                                @Html.DropDownListFor(m => m.Data.CourseId, CourseSelect, "-- Please Select --", new { @class = "form-control", @onchange = "handleCourse()" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-row">
                            <div class="col-md-4">
                                <label for="RecentEducation">Recent Education</label>
                                <input type="text" class="form-control" id="RecentEducation" name="RecentEducation" value="@Model.Data.RecentEducation" placeholder="Recent Education is mandatory" required="">
                            </div>
                            <div class="form-group col-md-4">
                                <label for="AdmissionNumber">Admission Number</label>
                                <input type="text" class="form-control" id="AdmissionNumber" name="AdmissionNumber" value="@Model.Data.AdmissionNumber" placeholder="Admission Number is mandatory" required="">
                            </div>
                            <div class="form-group col-md-4">
                                <label for="CourseFees">Course Fees</label>
                                <input type="number" class="form-control" id="CourseFees" name="CourseFees" value="@Model.Data.CourseFees" placeholder="Fees is mandatory" required="">
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                    @if (ViewBag.IsError != null)
                    {
                        if (ViewBag.IsError)
                        {
                            <div class="form-group">
                                <div class="alert alert-danger" role="alert">
                                    @Html.Raw(ViewBag.ErrorMessage)
                                </div>
                            </div>
                        }
                    }
                    @if (ViewBag.IsSuccess != null)
                    {
                        if (ViewBag.IsSuccess)
                        {
                            <div class="form-group">
                                <div class="alert alert-success" role="alert">
                                    @Html.Raw(ViewBag.SuccessMessage);
                                </div>
                            </div>
                        }
                    }
                </form>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>

        var dropDown = document.getElementById('Data_CourseId');
        dropDown.addEventListener('change', handleCourse);

        function handleCourse(event) {
            var url = "/GetFees?CourseId=" + $('#Data_CourseId').val();
            console.log(url);

            fetch(url, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    $('#CourseFees').val(data);
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                });
        }

        function AddFeesType(event) {
            event.preventDefault();
            var url = "@logger.BaseURL" + "Fees/add";

            var FeesName = $("#FeesName").val();

            var form = new FormData();
            form.append("Id", generateGUID());
            form.append("FeesName", FeesName);
            form.append("OrganizationId", '@OrganizationId');

            console.log(form);

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: form
            })
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                })
                .catch(error => {
                    console.error('Error fetching data:');
                });
        }
    </script>
}
